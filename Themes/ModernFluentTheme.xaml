<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Modern Fluent Theme - Clean, light, Microsoft Fluent Design inspired -->
    
    <!-- Color Palette -->
    <Color x:Key="PrimaryBackground">#FAFAFA</Color>
    <Color x:Key="SecondaryBackground">#F2F2F2</Color>
    <Color x:Key="PanelBackground">#FFFFFF</Color>
    <Color x:Key="PanelBorder">#E1E1E1</Color>
    <Color x:Key="AccentColor">#0078D7</Color> <!-- Fluent blue -->
    <Color x:Key="AccentColorLight">#429CE3</Color>
    <Color x:Key="TextPrimary">#323130</Color>
    <Color x:Key="TextSecondary">#605E5C</Color>
    <Color x:Key="GridLine">#E1E1E1</Color>
    <Color x:Key="ShadowColor">#20000000</Color>
    <Color x:Key="ButtonHover">#F6F6F6</Color>
    <Color x:Key="ButtonPressed">#E1E1E1</Color>
    <Color x:Key="MeasurementComplete">#107C10</Color>
    <Color x:Key="MeasurementPending">#F2C811</Color>
    <Color x:Key="MeasurementError">#D13438</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource PrimaryBackground}"/>
    <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="{StaticResource SecondaryBackground}"/>
    <SolidColorBrush x:Key="PanelBackgroundBrush" Color="{StaticResource PanelBackground}"/>
    <SolidColorBrush x:Key="PanelBorderBrush" Color="{StaticResource PanelBorder}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="AccentBackgroundBrush" Color="{StaticResource AccentColor}" Opacity="0.1"/>
    <SolidColorBrush x:Key="AccentBrushLight" Color="{StaticResource AccentColorLight}"/>
    <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimary}"/>
    <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondary}"/>
    <SolidColorBrush x:Key="GridLineBrush" Color="{StaticResource GridLine}"/>
    <SolidColorBrush x:Key="ButtonHoverBrush" Color="{StaticResource ButtonHover}"/>
    <SolidColorBrush x:Key="ButtonPressedBrush" Color="{StaticResource ButtonPressed}"/>
    <SolidColorBrush x:Key="MeasurementCompleteBrush" Color="{StaticResource MeasurementComplete}"/>
    <SolidColorBrush x:Key="MeasurementPendingBrush" Color="{StaticResource MeasurementPending}"/>
    <SolidColorBrush x:Key="MeasurementErrorBrush" Color="{StaticResource MeasurementError}"/>

    <!-- Fluent subtle shadow -->
    <DropShadowEffect x:Key="FluentShadow" BlurRadius="15" ShadowDepth="2" Color="{StaticResource ShadowColor}" Opacity="0.2"/>
    
    <!-- Panel Style - Fluent, modern appearance -->
    <Style x:Key="ModernPanel" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Effect" Value="{StaticResource FluentShadow}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- Button Style - Fluent, modern appearance -->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Effect" Value="{StaticResource FluentShadow}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Effect="{TemplateBinding Effect}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonPressedBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Compact Button Style (used in measurement point tree view) -->
    <Style x:Key="CompactMeasureButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="Margin" Value="4,0,0,0"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="11"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Fluent Accent Button Style -->
    <Style x:Key="FluentAccentButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Effect" Value="{StaticResource FluentShadow}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Effect="{TemplateBinding Effect}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#106EBE"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#005A9E"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Fluent Outlined Button Style -->
    <Style x:Key="FluentOutlinedButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#F3F9FD"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#E1F1FB"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid Style - Fluent, modern appearance -->
    <Style TargetType="DataGrid" x:Key="ModernDataGrid">
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource GridLineBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource GridLineBrush}"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="ColumnHeaderHeight" Value="32"/>
        <Setter Property="RowHeight" Value="36"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
    </Style>

    <!-- TreeView Style - Fluent, modern appearance -->
    <Style TargetType="TreeView" x:Key="ModernTreeView">
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- Progress Bar Style - Fluent, modern appearance -->
    <Style TargetType="ProgressBar">
        <Setter Property="Background" Value="#E1E1E1"/>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid>
                        <Border x:Name="PART_Track" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="2"/>
                        <Border x:Name="PART_Indicator" 
                                Background="{TemplateBinding Foreground}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="2" 
                                HorizontalAlignment="Left">
                            <Border.Width>
                                <MultiBinding Converter="{StaticResource ProgressToWidthConverter}">
                                    <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ActualWidth" ElementName="PART_Track"/>
                                </MultiBinding>
                            </Border.Width>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
