<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Industrial Professional Theme - Robust, industrial feel for manufacturing environments -->
    <Style TargetType="ProgressBar">
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="2">
                        <Grid>
                            <Rectangle x:Name="PART_Track" Fill="Transparent"/>
                            <Border x:Name="PART_Indicator" 
                                     Background="{TemplateBinding Foreground}" 
                                     HorizontalAlignment="Left" 
                                     CornerRadius="2"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox Style - Industrial, robust appearance -->
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Padding" Value="6,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" 
                                Grid.Column="0"
                                Background="{StaticResource PanelBackgroundBrush}"
                                BorderBrush="{StaticResource PanelBorderBrush}"
                                BorderThickness="2"
                                Width="18" Height="18"
                                CornerRadius="1">
                            <Path x:Name="checkMark"
                                  Data="M 0 4 L 4 8 L 12 0"
                                  Stroke="{StaticResource AccentBrush}"
                                  StrokeThickness="2.5"
                                  Visibility="Collapsed"
                                  Margin="3"/>
                        </Border>
                        <ContentPresenter Grid.Column="1" 
                                        Content="{TemplateBinding Content}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource AccentBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox Style - Industrial, professional design -->
    <Style TargetType="ComboBox">
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter"
                                            Grid.Column="0"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="Center"/>
                            <ToggleButton x:Name="toggleButton"
                                        Grid.Column="1"
                                        Width="24"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <Path Data="M 0 0 L 4 4 L 8 0 Z" 
                                      Fill="{StaticResource AccentBrush}"
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                            </ToggleButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Color Palette -->
    <Color x:Key="PrimaryBackground">#ECEDEF</Color>
    <Color x:Key="SecondaryBackground">#DFE1E5</Color>
    <Color x:Key="PanelBackground">#F0F1F2</Color>
    <Color x:Key="PanelBorder">#CFD2D9</Color>
    <Color x:Key="AccentColor">#0F5288</Color> <!-- Industrial blue -->
    <Color x:Key="AccentColorLight">#2575AE</Color>
    <Color x:Key="TextPrimary">#333740</Color>
    <Color x:Key="TextSecondary">#6B7280</Color>
    <Color x:Key="GridLine">#D1D5DB</Color>
    <Color x:Key="ShadowColor">#30000000</Color>
    <Color x:Key="ButtonHover">#DFE5ED</Color>
    <Color x:Key="ButtonPressed">#C3D1E0</Color>
    <Color x:Key="MeasurementComplete">#2E7D32</Color>
    <Color x:Key="MeasurementPending">#F57C00</Color>
    <Color x:Key="MeasurementError">#C62828</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource PrimaryBackground}"/>
    <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="{StaticResource SecondaryBackground}"/>
    <SolidColorBrush x:Key="PanelBackgroundBrush" Color="{StaticResource PanelBackground}"/>
    <SolidColorBrush x:Key="PanelBorderBrush" Color="{StaticResource PanelBorder}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="AccentBackgroundBrush" Color="{StaticResource AccentColor}" Opacity="0.1"/>
    <SolidColorBrush x:Key="AccentBrushLight" Color="{StaticResource AccentColorLight}"/>
    <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimary}"/>
    <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondary}"/>
    <SolidColorBrush x:Key="GridLineBrush" Color="{StaticResource GridLine}"/>
    <SolidColorBrush x:Key="ButtonHoverBrush" Color="{StaticResource ButtonHover}"/>
    <SolidColorBrush x:Key="ButtonPressedBrush" Color="{StaticResource ButtonPressed}"/>
    <SolidColorBrush x:Key="MeasurementCompleteBrush" Color="{StaticResource MeasurementComplete}"/>
    <SolidColorBrush x:Key="MeasurementPendingBrush" Color="{StaticResource MeasurementPending}"/>
    <SolidColorBrush x:Key="MeasurementErrorBrush" Color="{StaticResource MeasurementError}"/>

    <!-- Industrial shadow effect - sturdy appearance -->
    <DropShadowEffect x:Key="PanelShadow" BlurRadius="6" ShadowDepth="2" Color="{StaticResource ShadowColor}" Opacity="0.3"/>

    <!-- Panel Style - Industrial, robust appearance -->
    <Style x:Key="ModernPanel" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Effect" Value="{StaticResource PanelShadow}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- Button Style - Industrial, robust appearance -->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Effect" Value="{StaticResource PanelShadow}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            Effect="{TemplateBinding Effect}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonPressedBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Compact Button Style (used in measurement point tree view) -->
    <Style x:Key="CompactMeasureButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="Margin" Value="4,0,0,0"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="11"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Visualization Button Style - For data visualization functions -->
    <Style x:Key="VisualizationButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="15,10"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Export Button Style - For data export functions -->
    <Style x:Key="ExportButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="15,10"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Industrial Button Style - For principal industrial operations -->
    <Style x:Key="IndustrialButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Effect" Value="{StaticResource PanelShadow}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            Effect="{TemplateBinding Effect}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#0A4575"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="#0A4575"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#083B62"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="#083B62"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid Style - Industrial, robust appearance -->
    <Style TargetType="DataGrid" x:Key="ModernDataGrid">
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource GridLineBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource GridLineBrush}"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="ColumnHeaderHeight" Value="35"/>
        <Setter Property="RowHeight" Value="32"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
    </Style>

    <!-- TreeView Style - Industrial, robust appearance -->
    <Style TargetType="TreeView" x:Key="ModernTreeView">
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>
</ResourceDictionary>
